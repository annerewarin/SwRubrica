/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.Color;
import java.io.FileNotFoundException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.JOptionPane;
import swrubrica.DettagliConnessione;
import swrubrica.Persona;
import swrubrica.Utente;

/**
 *
 * @author anne
 */
public class Registration extends javax.swing.JFrame {
    
    private boolean registra = false;
    private boolean indietro = false;
    
    private String url = "";
    private String username = "";
    private String password = "";
    
    private Connection conn;

    /**
     * Creates new form Registration
     */
    public Registration() {
        initComponents();
        
        DettagliConnessione dc = new DettagliConnessione();
        dc.settaDettagli();
        url = dc.getUrl();
        username = dc.getUsername();
        password = dc.getPassword();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        usernameRTF = new javax.swing.JTextField();
        passwordRTF = new javax.swing.JPasswordField();
        confermaRTF = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        registraB = new javax.swing.JButton();
        indietroB = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Registrazione");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jLabel3.setText("Username");

        jLabel4.setText("Password");

        usernameRTF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                usernameRTFMouseClicked(evt);
            }
        });

        passwordRTF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                passwordRTFMouseClicked(evt);
            }
        });

        confermaRTF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                confermaRTFMouseClicked(evt);
            }
        });

        jLabel5.setText("Conferma Password");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(usernameRTF, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                    .addComponent(passwordRTF)
                    .addComponent(confermaRTF))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(usernameRTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(passwordRTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(confermaRTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(93, Short.MAX_VALUE))
        );

        jToolBar1.setRollover(true);

        registraB.setBackground(new java.awt.Color(0, 102, 0));
        registraB.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        registraB.setForeground(new java.awt.Color(255, 255, 255));
        registraB.setText("Registra");
        registraB.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        registraB.setFocusable(false);
        registraB.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        registraB.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        registraB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registraBActionPerformed(evt);
            }
        });
        jToolBar1.add(registraB);

        indietroB.setBackground(new java.awt.Color(204, 0, 0));
        indietroB.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        indietroB.setForeground(new java.awt.Color(255, 255, 255));
        indietroB.setText("Indietro");
        indietroB.setFocusable(false);
        indietroB.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        indietroB.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        indietroB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                indietroBActionPerformed(evt);
            }
        });
        jToolBar1.add(indietroB);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void indietroBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_indietroBActionPerformed
        super.dispose();
        Login l = new Login();
        l.setVisible(true);
    }//GEN-LAST:event_indietroBActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        if(!registra && !indietro){
            Login l = new Login();
            l.setVisible(true);
        }            
    }//GEN-LAST:event_formWindowClosed

    private void registraBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registraBActionPerformed
        registra = true;
        boolean valida = true;
        boolean usernameFlag = true;
        
        String usernametf = usernameRTF.getText();
        if(usernametf.equals("")){
            usernameRTF.setBackground(Color.red);
            valida = false;
        }
        
        String passwordtf = new String (passwordRTF.getPassword());
        if(passwordtf.equals("")){
            passwordRTF.setBackground(Color.red);
            valida = false;
        }
        
        String conferma = new String (confermaRTF.getPassword());
        if(conferma.equals("")){
            confermaRTF.setBackground(Color.red);
            valida = false;
        }
        
        if(!passwordtf.equals(conferma)){
            passwordRTF.setBackground(Color.red);
            confermaRTF.setBackground(Color.red);
            JOptionPane.showMessageDialog(null, "Le due password sono diverse.");
            valida = false;
        }
           
        if(registra && valida){
            
            System.out.println("Inserisce un utente al database.");

            try {
                conn = DriverManager.getConnection(url, username, password);
                Statement stat = conn.createStatement();

                System.out.println("Connesso a PostgreSQL server.");
                System.out.println("Nel registraAction");
                
                //stat.executeUpdate("create table if not exists Persone (userid Integer, id Integer, nome varchar, cognome varchar, indirizzo varchar, telefono varchar, eta Integer);");


                //stat.executeUpdate("create table if not exists Utenti (userid Integer primary key, username varchar, password varchar);");

                String sql = "select * from utenti;";

                ResultSet rs = stat.executeQuery(sql);
                Vector<Utente> lista = new Vector<Utente>();
                while(rs.next()){
                    Utente u = new Utente(rs.getString("username"), rs.getString("password"));
                    if(rs.getString("username").equals(usernametf)){
                        JOptionPane.showMessageDialog(null, "Username gia' registrato.");
                        usernameFlag = false;
                        
                    }
                    else{
                        lista.addElement(u);

                        System.out.println("userid:"+rs.getInt("userid")+" username:"+rs.getString("username")+" password:"+rs.getString("username"));
                    }
                    
                }

                rs.close();

                if(usernameFlag){
                    PreparedStatement ps;

                int index = lista.size();

                String sql2 = "insert into utenti values(?,?,?);";

                PreparedStatement ps2 = conn.prepareStatement(sql2);

                ps2.setInt(1, index);
                System.out.print(index+" ");
                ps2.setString(2, usernameRTF.getText());
                System.out.print(usernameRTF.getText()+" ");
                ps2.setString(3, new String(passwordRTF.getPassword()));
                System.out.println(new String(passwordRTF.getPassword()));
                ps2.addBatch();


                conn.setAutoCommit(false);
                ps2.executeBatch();
                conn.setAutoCommit(true);
                
                rs = stat.executeQuery(sql);
                
                while(rs.next()){
                    Utente u = new Utente(rs.getString("username"), rs.getString("password"));
                    

                    System.out.println("userid:"+rs.getInt("userid")+" username:"+rs.getString("username")+" password:"+rs.getString("username"));
                }

                rs.close();

                conn.close();
                
                JOptionPane.showMessageDialog(null, "Utente registrato con successo.");
                }
                
            } catch (SQLException e) {
                valida = false;
                JOptionPane.showMessageDialog(null, "Disconesso, per favore riprovare.");
                System.out.println(e.getMessage());
            }
         
        }
        
        if(valida && usernameFlag){
            super.dispose();
            Login l = new Login();
            l.setVisible(true);
        }
    }//GEN-LAST:event_registraBActionPerformed

    private void usernameRTFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usernameRTFMouseClicked
        usernameRTF.setBackground(Color.white);
    }//GEN-LAST:event_usernameRTFMouseClicked

    private void passwordRTFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_passwordRTFMouseClicked
        passwordRTF.setBackground(Color.white);
    }//GEN-LAST:event_passwordRTFMouseClicked

    private void confermaRTFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confermaRTFMouseClicked
        confermaRTF.setBackground(Color.white);
    }//GEN-LAST:event_confermaRTFMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Registration().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPasswordField confermaRTF;
    private javax.swing.JButton indietroB;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JPasswordField passwordRTF;
    private javax.swing.JButton registraB;
    private javax.swing.JTextField usernameRTF;
    // End of variables declaration//GEN-END:variables
}
